  display_map ={0:{'a','b','e','c','f','g'},
              1:{'c','f'},
              2:{'a','c','d','e','g'},
              3:{'a','c','d','f','g'},
              4:{'b','d','c','f'},
              5:{'a','b','d','f','g'},
              6:{'a','b','d','e','f','g'},
              7:{'a','c','f'},
              8:{'a','b','c','d','e','f','g'},
              9:{'a','b','c','d','f','g'}}
0 6
1 2
2 5
3 5
4 4
5 5
6 6
7 3
8 7
9 6

acedgfb cdfbe gcdfa fbcad dab cefabd cdfgeb eafb cagedb ab | cdfeb fcadb cdfeb cdbaf

cdfeb fcadb cdfeb cdbaf are all of 5 lengths
CDFEB FCADB CDFEB CDBAF (to denote they are different from correct ones )
We know be length : digit mapping
length 2 => 1
length 3 => 7
length 4 => 4
length 7 => 8
length 5 => 2,3,5
length 6 => 0,6,9

CDFEB can be 2,3 or 5
FCADB can be 2,3 or 5
CDFEB can be 2,3 or 5
CDBAF can be 2,3 or 5

assume CDFEB is 5, FCADB is 3 


defaultdict(<class 'list'>, {'c': [(3, 6), (7, 5), (7, 6), (9, 6), (1, 6), (8, 6), (3, 5), (4, 5), (9, 5), (2, 6), (1, 5), (0, 6), (4, 6)], 'e': [(0, 9), (2, 3), (8, 9), (2, 9), (6, 9), (6, 5)], 'f': [(3, 2), (1, 2), (7, 2)], 'd': [(4, 0), (9, 0), (5, 0), (6, 0), (2, 0), (3, 0), (8, 0)], 'b': [(5, 3), (9, 3), (4, 3)], 'a': [(7, 1), (7, 4)]})

fgaebd cg bdaec gdafb agbcfd gdcbef bgcad gfac gcb cdgabef | cg cg fdcagb cbg (actual 1197)

CG is 1
FDCAGD can be (0,6,9)
CBG is 7









 2:{'a','c','d','e','g'}
 3:{'a','c','d','f','g'}
 5:{'a','b','d','f','g'}

acedgfb: 8
cdfbe: 5
gcdfa: 2
fbcad: 3
dab: 7
cefabd: 9
cdfgeb: 6
eafb: 4
cagedb: 0
ab: 1






